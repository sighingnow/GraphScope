/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <string>
#include "vineyard/client/client.h"
#include "vineyard/graph/fragment/arrow_fragment.h"
#include "vineyard/graph/fragment/arrow_fragment_group.h"
#include "vineyard/graph/fragment/property_graph_types.h"
/* Header for class io_v6d_modules_graph_utils_VineyardHelper */

#ifndef _Included_io_v6d_modules_graph_utils_VineyardHelper
#define _Included_io_v6d_modules_graph_utils_VineyardHelper
#ifdef __cplusplus
extern "C" {
#endif

vineyard::Client * fragClient = NULL;
std::string ipc_socket_frag = "/tmp/vineyard.sock";
/*
 * Class:     io_v6d_modules_graph_utils_VineyardHelper
 * Method:    objectID2Address
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_io_v6d_modules_graph_utils_VineyardHelper_objectID2Address
  (JNIEnv *env , jclass clz, jlong objectId){
    using frag_type =vineyard::ArrowFragment<vineyard::property_graph_types::OID_TYPE,vineyard::property_graph_types::VID_TYPE>;
    if (!fragClient){
        fragClient = new vineyard::Client();
        VINEYARD_CHECK_OK(fragClient->Connect(ipc_socket_frag));
    }
    auto fragObject = fragClient->GetObject(static_cast<uint64_t>(objectId));
    static auto frag = std::dynamic_pointer_cast<frag_type>(fragObject);
    return reinterpret_cast<jlong>(frag.get());
}

JNIEXPORT jlong JNICALL Java_io_v6d_modules_graph_utils_VineyardHelper_fragGroupId2Address
  (JNIEnv *env , jclass clz, jlong objectId){
    using frag_group_type = vineyard::ArrowFragmentGroup;
    if (!fragClient){
        fragGroupClient = new vineyard::Client();
        VINEYARD_CHECK_OK(fragGroupClient->Connect(ipc_socket_frag));
    }
    auto frag_group_object = fragClient->GetObject(static_cast<uint64_t>(objectId));
    static auto frag_group = std::dynamic_pointer_cast<frag_group_type>(frag_group_object);
    return reinterpret_cast<jlong>(frag_group.get());
}

#ifdef __cplusplus
}
#endif
#endif
