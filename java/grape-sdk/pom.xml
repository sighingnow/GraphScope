<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.alibaba.grape</groupId>
        <artifactId>grape-sdk-parent</artifactId>
        <version>0.1</version>
    </parent>
    <artifactId>grape-sdk</artifactId>
    <name>grape-sdk</name>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jni.library.path>${project.basedir}/target/classes/natives/linux_64/:/usr/local/lib:
        </jni.library.path>
        <jacoco.version>0.8.7</jacoco.version>
        <!--        <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>-->
        <!--        <maven-checkstyle-plugin.version>3.1.0</maven-checkstyle-plugin.version>-->
        <!--        <checkstyle.version>8.29</checkstyle.version>-->
        <!--        <checkstyle-rules.version>4.0.1</checkstyle-rules.version>-->
        <!--        /home/admin/alibaba-ffi/llvm/target/classes-->

    </properties>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.alibaba.ffi</groupId>
            <artifactId>ffi</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.alibaba.ffi</groupId>
            <artifactId>annotation-processor</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.aliyun.odps</groupId>
            <artifactId>odps-sdk-commons</artifactId>
        </dependency>
        <dependency>
            <groupId>com.aliyun.odps</groupId>
            <artifactId>odps-sdk-mapred</artifactId>
        </dependency>
        <dependency>
            <groupId>com.aliyun.odps</groupId>
            <artifactId>cupid-table-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.aliyun.odps</groupId>
            <artifactId>odps-sdk-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.aliyun.odps</groupId>
            <artifactId>cupid-sdk</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.aliyun.odps.cupid</groupId>
            <artifactId>table-api-tunnel-impl</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.scijava</groupId>-->
<!--            <artifactId>native-lib-loader</artifactId>-->
<!--        </dependency>-->
    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <!-- avoid overriding between surefire and jacoco's argLine-->
                        <argLine>${argLine} -Dtest.tmpdir=${project.basedir}/target/testtmp
                            -Djava.library.path=${jni.library.path}
                        </argLine>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven-shade-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>ffi.properties</resource>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-assembly-plugin</artifactId>-->
            <!--                <configuration>-->
            <!--                    <archive>-->
            <!--                        <manifest>-->
            <!--                            <mainClass>...</mainClass>-->
            <!--                        </manifest>-->
            <!--                    </archive>-->
            <!--                    <descriptorRefs>-->
            <!--                        <descriptorRef>jar-with-dependencies</descriptorRef>-->
            <!--                    </descriptorRefs>-->
            <!--                </configuration>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <id>make-assembly</id> &lt;!&ndash; this is used for inheritance merges &ndash;&gt;-->
            <!--                        <phase>package</phase> &lt;!&ndash; bind to the packaging phase &ndash;&gt;-->
            <!--                        <goals>-->
            <!--                            <goal>single</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->
            <plugin>
                <!-- don't put antrun in pluginManagement-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${project.build.directory}/native"/>
                                <property environment="env"/>
                                <fail unless="env.LLVM11_HOME" message="LLVM11_HOME not set."/>
                                <condition property="platform"
                                           value="linux64">
                                    <os family="unix" arch="amd64"/>
                                </condition>
                                <fail unless="platform" message="Not a supported platform."/>
                                <condition property="lld"
                                           value="${env.LLVM11_HOME}/bin/ld.lld">
                                    <os family="unix" arch="amd64"/>
                                </condition>
                                <fail message="lld ${lld} not set or missing">
                                    <condition>
                                        <not>
                                            <available file="${lld}"/>
                                        </not>
                                    </condition>
                                </fail>
                                <exec executable="cmake" dir="${project.build.directory}/native" failonerror="true">
                                    <arg line="-DCMAKE_CXX_COMPILER=&quot;${env.LLVM11_HOME}/bin/clang++&quot; -DLLVM_DIR=${env.LLVM11_HOME}/lib/cmake/llvm -DCMAKE_CXX_FLAGS=&quot;-flto -fforce-emit-vtables&quot; -DCMAKE_JNI_LINKER_FLAGS=&quot;-fuse-ld=${lld} -Xlinker -mllvm=-lto-embed-bitcode&quot; ${basedir}"/>
                                </exec>
                                <exec executable="make" dir="${project.build.directory}/native" failonerror="true">
                                    <arg line="VERBOSE=1 -j"/>
                                </exec>
                                <!--                                <exec executable="make" dir="${project.build.directory}/native" failonerror="true">-->
                                <!--                                    <arg line="VERBOSE=1 install"/>-->
                                <!--                                </exec>-->
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>target/jacoco.exec</dataFile>
                            <outputDirectory>target/jacoco.out</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
